{"version":3,"sources":["Components/Container.jsx","Components/Header.jsx","Components/Main.jsx","config.js","Components/Countries/Card.jsx","Components/Countries/List.jsx","Components/Controls/CustomSelect.jsx","Components/Controls/Search.jsx","Components/Controls/Controls.jsx","Pages/HomePage.jsx","Components/CountryDetails/Button.jsx","Components/CountryDetails/CountryInfo.jsx","Pages/DetailsPage.jsx","Pages/NotFound.jsx","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","HeaderEl","header","Wrapper","Title","Link","attrs","to","ModeSwitcher","Header","useState","theme","setTheme","useEffect","document","body","setAttribute","onClick","style","marginRight","main","Main","children","BASE_URL","CardImage","img","CardBody","CardTitle","h3","CardList","ul","CardListItem","li","Card","name","info","push","useHistory","src","alt","map","el","title","description","section","List","filteredCountries","c","countryInfo","flags","png","population","toLocaleString","region","capital","CustomSelect","Select","styles","control","provided","backgroundColor","color","borderRadius","padding","border","boxShadow","height","option","state","cursor","isSelected","InputContainer","label","Input","input","type","placeholder","Search","search","setSearch","onChange","e","target","value","options","Controls","onSearch","setRegion","regionValue","isClearable","isSearchable","HomePage","countries","setCountries","setFilteredCountries","length","axios","get","then","data","filter","includes","toLowerCase","Button","button","CoutryImage","CountryTitle","h1","ListGroup","ListItem","Meta","TagGroup","Tag","span","CountryInfo","country","nativeName","flag","subregion","topLevelDomain","currencies","languages","borders","neighbors","setNeighbors","codes","join","Intl","NumberFormat","format","d","code","l","index","DetailsPage","goBack","useParams","setCountry","searchByCoutry","NotFound","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3b249004.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    max-width: 1240px;\r\n    margin: 0 auto;\r\n    padding: 0 2rem;\r\n`\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Container } from './Container';\r\nimport {IoMoonOutline, IoMoonSharp } from \"react-icons/io5\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst HeaderEl = styled.header`\r\n    box-shadow: var(--shadow);\r\n    background-color: var(--colors-ui-base);   \r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 2rem 0;\r\n`;\r\n\r\nconst Title = styled(Link).attrs({\r\n    to: '/'\r\n})`\r\n    text-decoration: none;\r\n    color: var(--colors-text);\r\n    font-weight: var(--fw-bold);\r\n    font-size: var(--fs-sm);\r\n`;\r\n\r\nconst ModeSwitcher = styled.div`\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    color: var(--colors-text);\r\n    font-weight: var(--fw-bold);\r\n    font-size: var(--fs-sm);\r\n    text-transform: capitalize;\r\n    \r\n`\r\n\r\nconst Header = () => {\r\n    const [theme, setTheme] = useState('light');\r\n\r\n    useEffect( ()=> {\r\n        document.body.setAttribute('data-theme', theme)\r\n    }, [theme])\r\n\r\n    const toggleTheme = () => {\r\n        setTheme(theme === 'light' ? 'dark' : 'light')\r\n    }\r\n\r\n    return (\r\n        <HeaderEl>\r\n            <Container>\r\n                <Wrapper>\r\n                    <Title>Where is the world?</Title>\r\n                    <ModeSwitcher onClick={toggleTheme}>\r\n                        {theme === 'light' ? <IoMoonOutline/> : <IoMoonSharp />}\r\n                        <span style ={{marginRight: '0.5rem'}}></span> {theme} mode\r\n                    </ModeSwitcher>\r\n                </Wrapper>\r\n            </Container>\r\n        </HeaderEl>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Container } from './Container';\r\n\r\n\r\nconst Wrapper = styled.main `\r\n    padding: 2rem 0;\r\n\r\n    @media(min-width: 767px) {\r\n        padding: 4rem 0;\r\n    }\r\n`\r\n\r\nconst Main = ({children}) => {\r\n    return (\r\n        <Wrapper>\r\n            <Container>\r\n               {children}\r\n            </Container> \r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default Main;","const BASE_URL = 'https://restcountries.com/v2/';\r\n\r\nexport const ALL_COUNTRIES = BASE_URL + 'all?fields=name,capital,flags,population,region,borders';\r\n\r\nexport const searchByCoutry = (name) => BASE_URL + 'name/' + name;\r\n\r\nexport const filterByCodes = (codes) => BASE_URL + 'alpha?codes=' + codes.join(',');\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Wrapper = styled.div`\r\n    border-radius: var(--radii);\r\n    background-color: var(--colors-ui-base);\r\n    box-shadow: var(--shadow);\r\n    cursor: pointer;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst CardImage = styled.img`\r\n    display: block;\r\n    width: 100%;\r\n    height: 150px;\r\n    object-fit: cover;\r\n    object-position: center;\r\n    box-shadow: var(--shadow);\r\n`;\r\n\r\nconst CardBody = styled.div`\r\n    padding: 1rem 1.5rem 2rem;\r\n`;\r\nconst CardTitle = styled.h3`\r\n    margin: 0;\r\n    font-size: var(--fs-md);\r\n    font-weight: var(--fw-bold);\r\n`;\r\n\r\nconst CardList = styled.ul`\r\n    list-style: none;\r\n    margin: 0;\r\n    padding: 1rem 0 0;\r\n`;\r\n\r\nconst CardListItem = styled.li`\r\n    font-size: var(--fs-sm);\r\n    line-height: 1.5;\r\n    font-weight: var(--fw-light);\r\n\r\n    & > b {\r\n        font-weight: var(--fw-bold);\r\n        margin-right: 5px;\r\n    }\r\n`;\r\n\r\n\r\n\r\nconst Card = ({img, name, info=[]}) => {\r\n\r\n    const {push} = useHistory();\r\n\r\n    return (\r\n        <Wrapper onClick= { () => push(`/country/${name}`) } >\r\n            <CardImage src={img} alt={name}/>\r\n            <CardBody>\r\n                <CardTitle>{name}</CardTitle>\r\n                <CardList>\r\n                    {info.map( (el) => (\r\n                        <CardListItem key={el.title}>\r\n                            <b>{el.title}:</b>{el.description}\r\n                        </CardListItem> )\r\n                    )}\r\n                </CardList>\r\n            </CardBody>\r\n            \r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Card from './Card';\r\n\r\n\r\nconst Wrapper = styled.section`\r\n    width: 100%;\r\n    padding: 2rem 0;\r\n    display: grid;\r\n    grid-template-columns: repeat(1, 1fr);\r\n    gap: 2rem;\r\n\r\n    @media (min-width: 767px) {\r\n        grid-template-columns: repeat(2, 1fr);\r\n        gap: 3rem;\r\n        padding: 2.5rem 0;\r\n    }\r\n\r\n    @media (min-width: 1024px) {\r\n        grid-template-columns: repeat(3, 1fr);\r\n        gap: 4rem;\r\n    }\r\n`\r\n\r\nconst List = ({filteredCountries}) => {\r\n    return (\r\n        <Wrapper>\r\n           {filteredCountries.map(c => {\r\n                    const countryInfo = {\r\n                        img: c.flags.png,\r\n                        name: c.name,\r\n                        info: [\r\n                            {\r\n                                title: 'Population',\r\n                                description: c.population.toLocaleString()\r\n                            },\r\n                            {\r\n                                title: 'Region',\r\n                                description: c.region.toLocaleString()\r\n                            },\r\n                            {\r\n                                title: 'Capital',\r\n                                description: c.capital.toLocaleString()\r\n                            },\r\n                        ]\r\n                    };\r\n                    return <Card key={c.name} {...countryInfo} />\r\n                })}\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default List;","import Select from 'react-select';\r\nimport styled from 'styled-components';\r\n\r\n\r\nexport const CustomSelect = styled(Select).attrs({\r\n    styles: {\r\n        control: (provided) => ({\r\n            ...provided,\r\n            backgroundColor: 'var(--colors-ui-base)',\r\n            color: 'var(--colors-text)',\r\n            borderRadius: 'var(--radii)',\r\n            padding: '0.25rem',\r\n            border: 'none',\r\n            boxShadow: 'var(--shadow)',\r\n            height: '50px'\r\n        }),\r\n        option: (provided, state) => ({\r\n            ...provided,\r\n            cursor: 'pointer',\r\n            backgroundColor: state.isSelected ? 'var(--colors-bg)' : 'var(--colors-ui-base)'\r\n        })\r\n    }\r\n}) `\r\n    width: 200px;\r\n    border-radius: var(--radii);\r\n    font-family: var(--family);\r\n    border: none;\r\n\r\n    & > * {\r\n        box-shadow: var(--shadow);\r\n    }\r\n\r\n    & input {\r\n        padding-left: 0.25rem;\r\n    }\r\n\r\n    & * {\r\n        color: var(--color-text) !important;\r\n    }\r\n\r\n    & > div[id] {\r\n        background-color: var(--colors-ui-base);\r\n    }\r\n` \r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {IoSearch} from 'react-icons/io5'\r\n\r\nconst InputContainer = styled.label `\r\n    background-color: var(--colors-ui-base);\r\n    padding: 1rem 2rem;\r\n    display: flex;\r\n    align-items: center;\r\n    border-radius: var(--radii);\r\n    box-shadow: var(--shadow);\r\n    width: 100%;\r\n    margin-bottom: 1rem;\r\n\r\n    @media (min-width: 767px) {\r\n        margin-bottom: 0;\r\n        width: 280px;\r\n    }\r\n`\r\n\r\nconst Input = styled.input.attrs({\r\n    type: 'search',\r\n    placeholder: 'Search for a country...'\r\n}) `\r\n    margin-left: 2rem;\r\n    border: none;\r\n    outline: none;\r\n    color: var(--colors-text);\r\n    background-color: var(--colors-ui-base);\r\n    width: 100%;\r\n`\r\n\r\n\r\nfunction Search({search, setSearch}) {\r\n\r\n    return (\r\n        <InputContainer>\r\n            <IoSearch/>\r\n            <Input onChange={e => setSearch(e.target.value)} value={search}/>\r\n        </InputContainer>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { CustomSelect } from './CustomSelect';\r\nimport Search from './Search';\r\n\r\n\r\nconst options = [\r\n    {value: 'Africa', label: 'Africa'},\r\n    {value: 'America', label: 'America'},\r\n    {value: 'Asia', label: 'Asia'},\r\n    {value: 'Europe', label: 'Europe'},\r\n    {value: 'Oceania', label: 'Oceania'},\r\n]\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n\r\n    @media(min-width: 767px) {\r\n        flex-direction: row;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n    }\r\n`\r\n\r\nfunction Controls({onSearch}) {\r\n    const [search, setSearch] = useState('');\r\n    const [region, setRegion] = useState('');\r\n\r\n\r\n    useEffect( () => {\r\n        const regionValue = region?.value || '';\r\n        onSearch(search, regionValue);    \r\n        //eslint-disable-next-line\r\n    }, [search, region])\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Search search={search} setSearch={setSearch} />\r\n            <CustomSelect options={options}\r\n                placeholder='Filter by region'\r\n                isClearable\r\n                isSearchable={false}\r\n                value={region}\r\n                onChange={setRegion}\r\n            />\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default Controls;","import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { ALL_COUNTRIES } from '../config';\r\nimport List from '../Components/Countries/List';\r\nimport Controls from '../Components/Controls/Controls';\r\n\r\n\r\n\r\nconst HomePage = ({countries, setCountries}) => {\r\n\r\n    const [filteredCountries, setFilteredCountries] = useState(countries);\r\n\r\n    const handleSearch = (search, region) => {\r\n        let data = [...countries];\r\n\r\n        if (region) {\r\n            data = data.filter(c => c.region.includes(region))\r\n        };\r\n\r\n        if (search) {\r\n            data = data.filter( c => c.name.toLowerCase().includes(search.toLowerCase()))\r\n        };\r\n\r\n        setFilteredCountries(data);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (!countries.length)\r\n            axios.get(ALL_COUNTRIES)\r\n            .then(({ data }) => setCountries(data))\r\n    }, [])\r\n\r\n    // One more useEffect for pushing 'countries' to 'filteredCountries'\r\n    useEffect( () => {\r\n        setFilteredCountries(countries);\r\n    }, [countries])\r\n\r\n    return (\r\n        <div>\r\n            <Controls onSearch={handleSearch}/>\r\n            <List filteredCountries={filteredCountries} />           \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomePage;","import styled from \"styled-components\";\r\n\r\nexport const Button = styled.button`\r\n    padding: 0 1rem;\r\n    background-color: var(--colors-ui-base);\r\n    box-shadow: var(--shadow);\r\n    line-height: 2.5;\r\n    border-radius: var(--radii);\r\n\r\n    border: none;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.75rem;\r\n\r\n    color: var(--corors-text);\r\n    cursor: pointer;\r\n`","import styled from \"styled-components\";\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { filterByCodes } from \"../../config\";\r\n\r\nconst Wrapper = styled.section`\r\n    display: grid;\r\n    grid-template-columns: 100%;\r\n    gap: 2rem;\r\n    width: 100%;\r\n    margin-top: 3rem;\r\n\r\n    @media(min-width: 767px) {\r\n        grid-template-columns: minmax(100px, 400px) 1fr;\r\n        align-items: center;\r\n        gap: 5rem;\r\n    }\r\n\r\n    @media(min-width: 1024px) {\r\n        grid-template-columns: minmax(400px, 600px) 1fr;\r\n    }\r\n`;\r\n\r\nconst CoutryImage = styled.img`\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: contain;\r\n`;\r\n\r\nconst CountryTitle = styled.h1`\r\n    margin: 0;\r\n    font-weight: var(--fw-normal);\r\n    margin-bottom: 1rem;\r\n`;\r\n\r\nconst ListGroup = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 2rem;\r\n\r\n    @media(min-width: 1024px) {\r\n        flex-direction: row;\r\n        gap: 4rem;\r\n    }\r\n`;\r\n\r\nconst List = styled.ul`\r\n    list-style: none;\r\n    margin: 0;\r\n    padding: 0;\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n    line-height: 1.8;\r\n\r\n    & > b {\r\n        font-weight: var(--fw-bold);\r\n    }\r\n`;\r\n\r\nconst Meta = styled.div`\r\n    margin-top: 3rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1.5rem;\r\n    align-items: flex-start;\r\n\r\n    & > b {\r\n        font-weight: var(--fw-bold);  \r\n    }\r\n\r\n    @media(min-width: 767px) {\r\n        flex-direction: row;\r\n        align-items: center;\r\n    }\r\n`;\r\n\r\nconst TagGroup = styled.div`\r\n    display: flex;\r\n    gap: 1rem;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nconst Tag = styled.span`\r\n    padding: 0 1rem;\r\n    background-color: var(--colors-ui-base);\r\n    box-shadow: var(--shadow);\r\n    line-height: 1.5;\r\n    cursor: pointer;\r\n`;\r\n\r\n\r\nconst CountryInfo = ({country, push}) => {\r\n\r\n    const {\r\n        name,\r\n        nativeName,\r\n        flag,\r\n        capital,\r\n        population,\r\n        region,\r\n        subregion,\r\n        topLevelDomain,\r\n        currencies = [],\r\n        languages = [],\r\n        borders = []\r\n    } = country;\r\n\r\n    const [neighbors, setNeighbors] = useState([]);\r\n\r\n    useEffect( () => {\r\n        if (borders.length) \r\n        axios.get(filterByCodes(borders))\r\n        .then( ({data}) => setNeighbors(data.map(c => c.name)))\r\n    }, [borders])\r\n\r\n    return (\r\n        <Wrapper>\r\n            <CoutryImage src={flag}/>\r\n            <div>\r\n                <CountryTitle>\r\n                    {name}\r\n                </CountryTitle>\r\n                <ListGroup>\r\n                    <List>\r\n                        <ListItem>\r\n                            <b>Native Name:</b> {nativeName}\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <b>Population: </b> {new Intl.NumberFormat('en-US').format(population)}\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <b>Region: </b> {region}\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <b>Sub Region: </b> {subregion}\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <b>Capital: </b> {capital}\r\n                        </ListItem>\r\n                    </List>\r\n                    <List>\r\n                        <ListItem>\r\n                            <b>Top Level Domain: </b> {topLevelDomain.map(\r\n                                 d => <span key={d}>{d}</span>\r\n                            )}\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <b>Currencies: </b> {currencies.map( c => \r\n                                <span key={c.code}> {c.name} </span>\r\n                            )}\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <b>Languagies: </b> {languages.map( (l, index) => \r\n                               <span key={l.name}>\r\n                                   { (index ? ', ' : '' ) +  l.name}\r\n                                </span>\r\n                            )}\r\n                        </ListItem>\r\n                    </List>\r\n                </ListGroup>\r\n\r\n                <Meta>\r\n                    <b>Border Countries: </b>\r\n                    {!borders.length ? (\r\n                        <span>There is no border countries</span>\r\n                     ) :\r\n                        (<TagGroup>\r\n                            {neighbors.map( c => (\r\n                                <Tag key={c} onClick={ () => push(`/country/${c}`) }> \r\n                                    {c} \r\n                                </Tag>\r\n                            ))}\r\n                        </TagGroup>)\r\n                    }   \r\n                </Meta>\r\n            </div>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default CountryInfo;","import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { IoArrowBack } from 'react-icons/io5';\r\nimport { searchByCoutry } from '../config';\r\nimport { Button } from '../Components/CountryDetails/Button';\r\nimport CountryInfo from '../Components/CountryDetails/CountryInfo';\r\n\r\n\r\nconst DetailsPage = () => {\r\n\r\n    const {push, goBack} = useHistory();\r\n    const {name} = useParams();\r\n    const [country, setCountry] = useState(null);\r\n\r\n    useEffect( () => {\r\n        axios.get(searchByCoutry(name))\r\n        .then( ({data}) => {\r\n            setCountry(data[0])\r\n        }) \r\n    }, [name])\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={goBack}>\r\n                <IoArrowBack/> \r\n                Back\r\n            </Button>\r\n\r\n            {country && \r\n                <CountryInfo push={push} country={country}/>\r\n            }         \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DetailsPage;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            This page doesn't exist\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import { useState } from 'react';\nimport './App.css';\nimport { Route, Switch } from 'react-router';\nimport Header from './Components/Header';\nimport Main from './Components/Main';\nimport HomePage from './Pages/HomePage';\nimport DetailsPage from './Pages/DetailsPage';\nimport NotFound from './Pages/NotFound';\n\n\nfunction App() {\n\n  const [countries, setCountries] = useState([]);\n\n  return (\n    <>\n      <Header/> \n      <Main>\n        <Switch>\n          <Route exact path='/'>\n            <HomePage countries={countries} setCountries={setCountries}/>\n          </Route>\n          <Route path='/country/:name' component={DetailsPage} />\n          <Route component={NotFound}/>\n        </Switch>  \n      </Main>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}